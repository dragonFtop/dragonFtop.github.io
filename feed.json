{
    "version": "https://jsonfeed.org/version/1",
    "title": "天行健，君子以自强不息",
    "subtitle": "",
    "icon": "https://dragonftop.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://dragonFtop.github.io",
    "items": [
        {
            "id": "https://dragonftop.github.io/2025/04/15/2.%E9%98%9F%E5%88%97/",
            "url": "https://dragonftop.github.io/2025/04/15/2.%E9%98%9F%E5%88%97/",
            "title": "数据结构-队列",
            "date_published": "2025-04-15T11:13:44.853Z",
            "content_html": "<hr />\n<h1 id=\"队列\"><a class=\"anchor\" href=\"#队列\">#</a> <strong>队列</strong></h1>\n<h2 id=\"一-队列的数据结构\"><a class=\"anchor\" href=\"#一-队列的数据结构\">#</a> <strong>一、队列的数据结构</strong></h2>\n<hr />\n<h2 id=\"-code0-\"><a class=\"anchor\" href=\"#-code0-\">#</a> <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure></h2>\n<h2 id=\"二-队列的操作\"><a class=\"anchor\" href=\"#二-队列的操作\">#</a> <strong>二、队列的操作</strong></h2>\n<pre><code class=\"language-C\">\n</code></pre>\n<hr />\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/04/13/1.%E6%A0%88/",
            "url": "https://dragonftop.github.io/2025/04/13/1.%E6%A0%88/",
            "title": "数据结构---栈",
            "date_published": "2025-04-13T12:27:28.617Z",
            "content_html": "<h1 id=\"栈\"><a class=\"anchor\" href=\"#栈\">#</a> <strong>&lt;栈&gt;</strong></h1>\n<h2 id=\"-顺序栈-\"><a class=\"anchor\" href=\"#-顺序栈-\">#</a> <strong>- 顺序栈 -</strong></h2>\n<h3 id=\"一-顺序栈的数据结构\"><a class=\"anchor\" href=\"#一-顺序栈的数据结构\">#</a> <strong>一、顺序栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-顺序栈的操作\"><a class=\"anchor\" href=\"#二-顺序栈的操作\">#</a> <strong>二、顺序栈的操作</strong></h3>\n<hr />\n<h4 id=\"1-入栈\"><a class=\"anchor\" href=\"#1-入栈\">#</a> <strong>1. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-出栈\"><a class=\"anchor\" href=\"#2-出栈\">#</a> <strong>2. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-得到栈顶元素\"><a class=\"anchor\" href=\"#3-得到栈顶元素\">#</a> <strong>3. 得到栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//仅仅只是得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"完整可测试代码\"><a class=\"anchor\" href=\"#完整可测试代码\">#</a> <strong>完整可测试代码</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MaxSize 100</span></span><br><span class=\"line\"><span class=\"comment\">//栈数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************************基本操作函数************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ts.base=new SElemType[MaxSize];<span class=\"comment\">//动态分配最大容量</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!s.base)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.top=s.base;<span class=\"comment\">//栈顶指针与栈底相同 王道上top起初在base下面，感觉很别扭，top应该高于或等于base</span></span><br><span class=\"line\">\ts.stacksize=MaxSize;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//********************************功能实现函数**************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈      2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已满！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(s,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> SqStack s;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(s);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"-链栈-\"><a class=\"anchor\" href=\"#-链栈-\">#</a> <strong>- 链栈 -</strong></h2>\n<h3 id=\"一-链栈的数据结构\"><a class=\"anchor\" href=\"#一-链栈的数据结构\">#</a> <strong>一、链栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-链栈的操作\"><a class=\"anchor\" href=\"#二-链栈的操作\">#</a> <strong>二、链栈的操作</strong></h3>\n<hr />\n<h4 id=\"1初始化\"><a class=\"anchor\" href=\"#1初始化\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2入栈\"><a class=\"anchor\" href=\"#2入栈\">#</a> <strong>2. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3出栈\"><a class=\"anchor\" href=\"#3出栈\">#</a> <strong>3. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4取栈顶元素\"><a class=\"anchor\" href=\"#4取栈顶元素\">#</a> <strong>4. 取栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"完整可测试代码-2\"><a class=\"anchor\" href=\"#完整可测试代码-2\">#</a> <strong>完整可测试代码</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"comment\">//链栈结点数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************基本操作函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈函数 将e压入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈函数  栈顶出栈用e返回 注意释放空间</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶函数 用e返回</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//**************************功能实现函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈          2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶元素    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数 </span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(LinkStack S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(S,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> LinkStack S;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(S);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/04/04/3.%E6%95%99%E6%9D%90%E9%85%8D%E5%A5%97%E7%BD%91%E7%AB%99/",
            "url": "https://dragonftop.github.io/2025/04/04/3.%E6%95%99%E6%9D%90%E9%85%8D%E5%A5%97%E7%BD%91%E7%AB%99/",
            "title": "数据结构与算法",
            "date_published": "2025-04-04T12:43:56.900Z",
            "content_html": "<h1 id=\"数据结构学习资源\"><a class=\"anchor\" href=\"#数据结构学习资源\">#</a> <em><strong>数据结构学习资源</strong></em></h1>\n<h3 id=\"数据结构\"><a class=\"anchor\" href=\"#数据结构\">#</a> 数据结构</h3>\n<h4 id=\"1数据结构c语言版全书知识梳理\"><a class=\"anchor\" href=\"#1数据结构c语言版全书知识梳理\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pYW1senkuYmxvZy5jc2RuLm5ldC9hcnRpY2xlL2RldGFpbHMvODY1NjA1NzA/ZnJvbXNoYXJlPWJsb2dkZXRhaWwmYW1wO3NoYXJldHlwZT1ibG9nZGV0YWlsJmFtcDtzaGFyZXJJZD04NjU2MDU3MCZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">1.《数据结构》C 语言版全书知识梳理</span></h4>\n<h4 id=\"2数据结构严蔚敏版与算法的实现含全部代码\"><a class=\"anchor\" href=\"#2数据结构严蔚敏版与算法的实现含全部代码\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhZHlfa2lsbGVyOS9hcnRpY2xlL2RldGFpbHMvODI2OTU4OTU/ZnJvbXNoYXJlPWJsb2dkZXRhaWwmYW1wO3NoYXJldHlwZT1ibG9nZGV0YWlsJmFtcDtzaGFyZXJJZD04MjY5NTg5NSZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">2. 数据结构（严蔚敏版）与算法的实现（含全部代码</span></h4>\n<h4 id=\"3数据结构c语言严蔚敏版第二版超详细笔记附带课后习题\"><a class=\"anchor\" href=\"#3数据结构c语言严蔚敏版第二版超详细笔记附带课后习题\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nob25neWFuZ18vYXJ0aWNsZS9kZXRhaWxzLzEwOTU0NDcxOT9mcm9tc2hhcmU9YmxvZ2RldGFpbCZhbXA7c2hhcmV0eXBlPWJsb2dkZXRhaWwmYW1wO3NoYXJlcklkPTEwOTU0NDcxOSZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">3. 数据结构 C 语言严蔚敏版 (第二版) 超详细笔记附带课后习题</span></h4>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/03/15/hello-world/",
            "url": "https://dragonftop.github.io/2025/03/15/hello-world/",
            "title": "Hello World",
            "date_published": "2025-03-15T08:19:49.763Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "天行健，君子以自强不息",
    "subtitle": "",
    "icon": "https://dragonftop.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://dragonFtop.github.io",
    "items": [
        {
            "id": "https://dragonftop.github.io/2025/05/17/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",
            "url": "https://dragonftop.github.io/2025/05/17/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",
            "title": "排序算法",
            "date_published": "2025-05-17T07:16:44.911Z",
            "content_html": "<h1 id=\"常见的排序算法\"><a class=\"anchor\" href=\"#常见的排序算法\">#</a> 常见的排序算法</h1>\n<h2 id=\"简单选择排序\"><a class=\"anchor\" href=\"#简单选择排序\">#</a> 简单选择排序</h2>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">SelectSort</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> min;<span class=\"type\">int</span> temp;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmin=i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=i+<span class=\"number\">1</span>;j&lt;L.length;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(L.data[j]&lt;L.data[min])min=j;</span><br><span class=\"line\">\t\t&#125;\t\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(min!=i)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp=L.data[min];</span><br><span class=\"line\">\t\t\tL.data[min]=L.data[i];</span><br><span class=\"line\">\t\t\tL.data[i]=temp;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"直接插入排序\"><a class=\"anchor\" href=\"#直接插入排序\">#</a> 直接插入排序</h2>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//直接插入排序 升序排序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InsertSort</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> temp;<span class=\"type\">int</span> i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>;i&lt;=L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.data[i]&lt;L.data[i<span class=\"number\">-1</span>])<span class=\"comment\">//比较有序表最后一个</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\tL.data[<span class=\"number\">0</span>]=L.data[i];<span class=\"comment\">//放入哨兵中</span></span><br><span class=\"line\">\t\t\tL.data[i]=L.data[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(j=i<span class=\"number\">-2</span>;L.data[<span class=\"number\">0</span>]&lt;L.data[j];j--)<span class=\"comment\">//比较后移</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tL.data[j+<span class=\"number\">1</span>]=L.data[j];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tL.data[j+<span class=\"number\">1</span>]=L.data[<span class=\"number\">0</span>];<span class=\"comment\">//哨兵入列</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tPrintList(L);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"冒泡排序\"><a class=\"anchor\" href=\"#冒泡排序\">#</a> 冒泡排序</h2>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//冒泡排序 升序排序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">BubbleSort</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (m &gt; <span class=\"number\">0</span> &amp;&amp; flag == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (L.data[j] &gt; L.data[j + <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> temp = L.data[j];</span><br><span class=\"line\">\t\t\t\tL.data[j] = L.data[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tL.data[j + <span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t--m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"快速排序\"><a class=\"anchor\" href=\"#快速排序\">#</a> 快速排序</h2>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//快速排序分割函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Partition</span><span class=\"params\">(SqList &amp;L,<span class=\"type\">int</span> low,<span class=\"type\">int</span> high)</span></span><br><span class=\"line\">&#123;\t</span><br><span class=\"line\">\t<span class=\"type\">int</span> pivotekey = L.data[low]; <span class=\"comment\">//保存枢轴</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (low&lt;high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (low &lt; high&amp;&amp;L.data[high] &gt;= pivotekey) --high;</span><br><span class=\"line\">\t\tL.data[low] = L.data[high];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (low &lt; high&amp;&amp;L.data[low] &lt;= pivotekey) ++low;</span><br><span class=\"line\">\t\tL.data[high] = L.data[low];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.data[low] = pivotekey;</span><br><span class=\"line\">\tPrintList(L);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> low;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 快速排序 升序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">QuickSort</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> low, <span class=\"type\">int</span> high)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (low &lt; high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> pivotloc = Partition(L,low,high);</span><br><span class=\"line\">\t\tQuickSort(L,low,pivotloc<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\tQuickSort(L, pivotloc + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/05/11/1.%E6%A0%88/",
            "url": "https://dragonftop.github.io/2025/05/11/1.%E6%A0%88/",
            "title": "数据结构---栈",
            "date_published": "2025-05-11T12:23:07.673Z",
            "content_html": "<h1 id=\"栈\"><a class=\"anchor\" href=\"#栈\">#</a> <strong>&lt;栈&gt;</strong></h1>\n<h2 id=\"-顺序栈-\"><a class=\"anchor\" href=\"#-顺序栈-\">#</a> <strong>- 顺序栈 -</strong></h2>\n<h3 id=\"一-顺序栈的数据结构\"><a class=\"anchor\" href=\"#一-顺序栈的数据结构\">#</a> <strong>一、顺序栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-顺序栈的操作\"><a class=\"anchor\" href=\"#二-顺序栈的操作\">#</a> <strong>二、顺序栈的操作</strong></h3>\n<hr />\n<h4 id=\"1-入栈\"><a class=\"anchor\" href=\"#1-入栈\">#</a> <strong>1. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-出栈\"><a class=\"anchor\" href=\"#2-出栈\">#</a> <strong>2. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-得到栈顶元素\"><a class=\"anchor\" href=\"#3-得到栈顶元素\">#</a> <strong>3. 得到栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//仅仅只是得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"完整可测试代码\"><a class=\"anchor\" href=\"#完整可测试代码\">#</a> <strong>完整可测试代码</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MaxSize 100</span></span><br><span class=\"line\"><span class=\"comment\">//栈数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************************基本操作函数************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ts.base=new SElemType[MaxSize];<span class=\"comment\">//动态分配最大容量</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!s.base)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.top=s.base;<span class=\"comment\">//栈顶指针与栈底相同 王道上top起初在base下面，感觉很别扭，top应该高于或等于base</span></span><br><span class=\"line\">\ts.stacksize=MaxSize;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//********************************功能实现函数**************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈      2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已满！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(s,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> SqStack s;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(s);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"-链栈-\"><a class=\"anchor\" href=\"#-链栈-\">#</a> <strong>- 链栈 -</strong></h2>\n<h3 id=\"一-链栈的数据结构\"><a class=\"anchor\" href=\"#一-链栈的数据结构\">#</a> <strong>一、链栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-链栈的操作\"><a class=\"anchor\" href=\"#二-链栈的操作\">#</a> <strong>二、链栈的操作</strong></h3>\n<hr />\n<h4 id=\"1初始化\"><a class=\"anchor\" href=\"#1初始化\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2入栈\"><a class=\"anchor\" href=\"#2入栈\">#</a> <strong>2. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3出栈\"><a class=\"anchor\" href=\"#3出栈\">#</a> <strong>3. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4取栈顶元素\"><a class=\"anchor\" href=\"#4取栈顶元素\">#</a> <strong>4. 取栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"完整可测试代码-2\"><a class=\"anchor\" href=\"#完整可测试代码-2\">#</a> <strong>完整可测试代码</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"comment\">//链栈结点数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************基本操作函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈函数 将e压入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈函数  栈顶出栈用e返回 注意释放空间</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶函数 用e返回</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//**************************功能实现函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈          2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶元素    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数 </span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(LinkStack S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(S,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> LinkStack S;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(S);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/05/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A2%98%E5%BA%93WP/",
            "url": "https://dragonftop.github.io/2025/05/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A2%98%E5%BA%93WP/",
            "title": "数据结构wrtie_up",
            "date_published": "2025-05-11T12:22:15.749Z",
            "content_html": "<h1 id=\"数据结构\"><a class=\"anchor\" href=\"#数据结构\">#</a> <strong>数据结构</strong></h1>\n<h2 id=\"数组与串-液晶屏\"><a class=\"anchor\" href=\"#数组与串-液晶屏\">#</a> <strong>数组与串 - 液晶屏</strong></h2>\n<hr />\n<p><strong>题目：</strong><br />\n<img data-src=\"PixPin_2025-05-17_14-25-12.jpg\" alt=\"alt text\" /><br />\n<strong> 输入输出要求</strong>：<br />\n<img data-src=\"PixPin_2025-05-17_14-28-05.jpg\" alt=\"alt text\" /><br />\n<strong> 我的代码：</strong><br />\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"type\">char</span>* op = new <span class=\"type\">char</span>[<span class=\"number\">5</span>*n];</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; str;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (str[i]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">3</span>, op[i + n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">4</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">2</span>, op[i + n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">4</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">4</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span>:</span><br><span class=\"line\">\t\t\top[i] = <span class=\"number\">1</span>, op[i + n] = <span class=\"number\">2</span>, op[i + <span class=\"number\">2</span> * n] = <span class=\"number\">1</span>, op[i + <span class=\"number\">3</span> * n] = <span class=\"number\">3</span>, op[i + <span class=\"number\">4</span> * n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span> * n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (op[i]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;XXX&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;X.X&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;..X&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;X..&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br />\n<strong> 总结： 由点阵想到了矩阵，所以利用了矩阵来存储对应每个数字的输出操作，从而形成了 op 数组，再将 op 数组进行解码输出，就达到了 “液晶屏” 的效果。</strong></p>\n<h2 id=\"数组与串-杨辉三角\"><a class=\"anchor\" href=\"#数组与串-杨辉三角\">#</a> <strong>数组与串 - 杨辉三角</strong></h2>\n<hr />\n<p><strong>题目：</strong><br />\n<img data-src=\"PixPin_2025-05-17_14-35-07.jpg\" alt=\"alt text\" /><br />\n<strong> 输入输出要求：</strong><br />\n<img data-src=\"PixPin_2025-05-17_14-36-03.jpg\" alt=\"alt text\" /><br />\n<strong> 我的代码：</strong><br />\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"type\">int</span> *row = new <span class=\"type\">int</span>[n];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\trow[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i<span class=\"number\">-1</span>; j &gt; <span class=\"number\">0</span>;j--) &#123;</span><br><span class=\"line\">\t\t\t\trow[j] = row[j] + row[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= i; k++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; row[k]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br />\n<strong> 总结：想到了先将‘1’给定下来，所以我在对每一层进行操作的时候都会先令 row [i] = 1，由此每行的两端都确定是 1，然后再依据上一行的数据（我这里只用了一行的存储空间，可以将第 i 此处理后的数组看作是第 i+1 行的上一行的数据），从右往左进行 row [j] = row [j] + row [j-1] ，注意这里不能从左往右，否则存在数据丢失的问题。</strong></p>\n<h2 id=\"数组与串-n皇后\"><a class=\"anchor\" href=\"#数组与串-n皇后\">#</a> <strong>数组与串 - N 皇后</strong></h2>\n<hr />\n<p><strong>题目：</strong><br />\n<img data-src=\"PixPin_2025-05-17_14-39-36.jpg\" alt=\"alt text\" /><br />\n<strong> 输入输出要求：</strong><br />\n<img data-src=\"PixPin_2025-05-17_14-39-52.jpg\" alt=\"alt text\" /><br />\n<strong> 我的代码：</strong><br />\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> r, <span class=\"type\">int</span> n, <span class=\"type\">bool</span>* col, <span class=\"type\">bool</span>* diag1, <span class=\"type\">bool</span>* diag2, <span class=\"type\">int</span>* ans)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r == n) &#123;</span><br><span class=\"line\">        (*ans)++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> c = <span class=\"number\">0</span>; c &lt; n; c++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> rc = r - c + n - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!col[c] &amp;&amp; !diag1[r + c] &amp;&amp; !diag2[rc]) &#123;</span><br><span class=\"line\">            col[c] = diag1[r + c] = diag2[rc] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            dfs(r + <span class=\"number\">1</span>, n, col, diag1, diag2, ans);</span><br><span class=\"line\">            col[c] = diag1[r + c] = diag2[rc] = <span class=\"literal\">false</span>; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Nqueens</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">bool</span>* col = new <span class=\"type\">bool</span>[n]();</span><br><span class=\"line\">    <span class=\"type\">bool</span>* diag1 = new <span class=\"type\">bool</span>[<span class=\"number\">2</span> * n - <span class=\"number\">1</span>]();</span><br><span class=\"line\">    <span class=\"type\">bool</span>* diag2 = new <span class=\"type\">bool</span>[<span class=\"number\">2</span> * n - <span class=\"number\">1</span>]();</span><br><span class=\"line\"></span><br><span class=\"line\">    dfs(<span class=\"number\">0</span>, n, col, diag1, diag2, &amp;ans);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; Nqueens(n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br />\n<strong> 总结：利用了递归算法，这里我采用行递归，列遍历的方式。其实就像求全排列一样，我们是在递归的过程中，剔除掉不合法的情况。本代码中的 dfs 函数中的 r 也就是行数，从 0<br />\n 开始，在递归中底价，同时列数 col 也在递归函数中有一个 for 循环遍历，这也就相当于一个对所有数据惊醒一个遍历，通过判断条件剔除掉不合法的数据（这里显然不合法的数据是指当遍历到 (a_{ij} )，若其他列或正反对角线上存在元素（用 bool 型数据表示），则为非法情况），若为非法情况，则回溯到该方案前，进入一下一种方案，不断持续到全部遍历完。</strong></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/05/10/%E6%A0%91/",
            "url": "https://dragonftop.github.io/2025/05/10/%E6%A0%91/",
            "title": "二叉树",
            "date_published": "2025-05-10T08:12:59.642Z",
            "content_html": "<h1 id=\"二叉树\"><a class=\"anchor\" href=\"#二叉树\">#</a> <strong>&lt;二叉树&gt;</strong></h1>\n<h3 id=\"一-二叉树的存储结构\"><a class=\"anchor\" href=\"#一-二叉树的存储结构\">#</a> <strong>一、二叉树的存储结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tTElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span> *<span class=\"title\">lchild</span>, *<span class=\"title\">rchild</span>;</span><span class=\"comment\">//左右孩子</span></span><br><span class=\"line\">&#125;BiTNode, *BiTree;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-二叉树的操作\"><a class=\"anchor\" href=\"#二-二叉树的操作\">#</a> <strong>二、二叉树的操作</strong></h3>\n<h4 id=\"1创建二叉树\"><a class=\"anchor\" href=\"#1创建二叉树\">#</a> 1. 创建二叉树</h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">InitTree</span><span class=\"params\">(BiTree &amp;T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tTElemType a;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"number\">-1</span> == a) T = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tT = (BiTree)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(BiTNode));</span><br><span class=\"line\">\t\tT-&gt;data = a;</span><br><span class=\"line\">\t\tInitTree(T-&gt;lchild);</span><br><span class=\"line\">\t\tInitTree(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2先序遍历\"><a class=\"anchor\" href=\"#2先序遍历\">#</a> <strong>2. 先序遍历</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PreOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t\tPreOrder(T-&gt;lchild);<span class=\"comment\">//递归先序遍历左右子树</span></span><br><span class=\"line\">\t\tPreOrder(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3中序遍历\"><a class=\"anchor\" href=\"#3中序遍历\">#</a> <strong>3. 中序遍历</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tInOrder(T-&gt;lchild);<span class=\"comment\">//递归中序遍历左右子树</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t\tInOrder(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4后序遍历\"><a class=\"anchor\" href=\"#4后序遍历\">#</a> <strong>4. 后序遍历</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PostOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tPostOrder(T-&gt;lchild);<span class=\"comment\">//递归后序遍历左右子树</span></span><br><span class=\"line\">\t\tPostOrder(T-&gt;rchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5层序遍历\"><a class=\"anchor\" href=\"#5层序遍历\">#</a> <strong>5. 层序遍历</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LevelOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;BiTNode&gt; q;<span class=\"comment\">//借助队列</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tBiTNode temp;<span class=\"comment\">//暂存要出队的结点</span></span><br><span class=\"line\">\t\tq.push(*T);<span class=\"comment\">//根结点入队</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (!q.empty())<span class=\"comment\">//队列非空</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = q.front();</span><br><span class=\"line\">\t\t\tq.pop();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, temp.data);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.lchild != <span class=\"literal\">NULL</span>) q.push(*temp.lchild);<span class=\"comment\">//队列先进先出，先入左孩子</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.rchild != <span class=\"literal\">NULL</span>) q.push(*temp.rchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三-完整可测试代码\"><a class=\"anchor\" href=\"#三-完整可测试代码\">#</a> <strong>三、完整可测试代码</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TElemType int</span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//链式二叉树数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tTElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiTNode</span> *<span class=\"title\">lchild</span>, *<span class=\"title\">rchild</span>;</span><span class=\"comment\">//左右孩子</span></span><br><span class=\"line\">&#125;BiTNode, *BiTree;</span><br><span class=\"line\"><span class=\"comment\">//********************************基本操作函数********************************//</span></span><br><span class=\"line\"><span class=\"comment\">//创建二叉树 规定数据域为-1，则为空 先序创建</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">InitTree</span><span class=\"params\">(BiTree &amp;T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tTElemType a;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"number\">-1</span> == a) T = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tT = (BiTree)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(BiTNode));</span><br><span class=\"line\">\t\tT-&gt;data = a;</span><br><span class=\"line\">\t\tInitTree(T-&gt;lchild);</span><br><span class=\"line\">\t\tInitTree(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//先序遍历-递归</span></span><br><span class=\"line\"><span class=\"comment\">//先序遍历 按照逻辑来说,执行这个函数前,应该进行逻辑判断（树是否为空），放在里面的话也没有else进行输出提示，不太好</span></span><br><span class=\"line\"><span class=\"comment\">//这里就按照课本敲代码了，在对应功能实现函数进行逻辑判断</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PreOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t\tPreOrder(T-&gt;lchild);<span class=\"comment\">//递归先序遍历左右子树</span></span><br><span class=\"line\">\t\tPreOrder(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//中序遍历-递归</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tInOrder(T-&gt;lchild);<span class=\"comment\">//递归中序遍历左右子树</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t\tInOrder(T-&gt;rchild);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//后序遍历-递归</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PostOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tPostOrder(T-&gt;lchild);<span class=\"comment\">//递归后序遍历左右子树</span></span><br><span class=\"line\">\t\tPostOrder(T-&gt;rchild);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, T-&gt;data);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//层序遍历</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LevelOrder</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;BiTNode&gt; q;<span class=\"comment\">//借助队列</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (T != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tBiTNode temp;<span class=\"comment\">//暂存要出队的结点</span></span><br><span class=\"line\">\t\tq.push(*T);<span class=\"comment\">//根结点入队</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (!q.empty())<span class=\"comment\">//队列非空</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = q.front();</span><br><span class=\"line\">\t\t\tq.pop();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, temp.data);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.lchild != <span class=\"literal\">NULL</span>) q.push(*temp.lchild);<span class=\"comment\">//队列先进先出，先入左孩子</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.rchild != <span class=\"literal\">NULL</span>) q.push(*temp.rchild);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//**********************************功能实现函数*****************************//</span></span><br><span class=\"line\"><span class=\"comment\">//调用InitTree</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">CreateBiTree</span><span class=\"params\">(BiTree &amp;T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请按照先序遍历输入二叉树(-1无):&quot;</span>);</span><br><span class=\"line\">\tInitTree(T);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;二叉树先序遍历序列:&quot;</span>);</span><br><span class=\"line\">\tPreOrder(T);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//遍历功能函数 调用PreOrder InOrder PostOrder LevelOrder</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Traverse</span><span class=\"params\">(BiTree T)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> choice;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.先序遍历    2.中序遍历*********\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.后序遍历    4.层次遍历*********\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********5.返回上一单元\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;choice);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"number\">5</span> == choice) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (choice)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>: &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;二叉树先序遍历序列:&quot;</span>);PreOrder(T);<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);&#125;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>: &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;二叉树中序遍历序列:&quot;</span>);InOrder(T);<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);&#125;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>: &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;二叉树后序遍历序列:&quot;</span>);PostOrder(T);<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);&#125;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>: &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;二叉树层次遍历序列:&quot;</span>);LevelOrder(T);<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);&#125;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.创建    2.遍历*********\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.退出\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tBiTree T = <span class=\"literal\">NULL</span>;<span class=\"type\">int</span> choice = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmenu();</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;choice);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"number\">3</span> == choice) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (choice)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:CreateBiTree(T);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:Traverse(T);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/05/02/%E8%A1%A8/",
            "url": "https://dragonftop.github.io/2025/05/02/%E8%A1%A8/",
            "title": "数据结构---线性表",
            "date_published": "2025-05-01T23:24:51.448Z",
            "content_html": "<h1 id=\"线性表\"><a class=\"anchor\" href=\"#线性表\">#</a> <strong>线性表</strong></h1>\n<h2 id=\"顺序表\"><a class=\"anchor\" href=\"#顺序表\">#</a> <strong>顺序表</strong></h2>\n<h3 id=\"一-顺序表的存储结构\"><a class=\"anchor\" href=\"#一-顺序表的存储结构\">#</a> <strong>一、顺序表的存储结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data[MaxSize];<span class=\"comment\">//顺序表元素</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> length;            <span class=\"comment\">//顺序表当前长度</span></span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"comment\">//其实就是定义了一个数组</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-顺序表的操作\"><a class=\"anchor\" href=\"#二-顺序表的操作\">#</a> <strong>二、顺序表的操作</strong></h3>\n<h4 id=\"1初始化\"><a class=\"anchor\" href=\"#1初始化\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(L.data, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(L));<span class=\"comment\">//初始化数据为0</span></span><br><span class=\"line\">\tL.length = <span class=\"number\">0</span>;                <span class=\"comment\">//初始化长度为0</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2创建顺序表\"><a class=\"anchor\" href=\"#2创建顺序表\">#</a> <strong>2. 创建顺序表</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">CreateList</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n&lt;<span class=\"number\">0</span> || n&gt;MaxSize)<span class=\"literal\">false</span>;<span class=\"comment\">//n非法</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;L.data[i]);</span><br><span class=\"line\">\t\tL.length++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;                        </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3在指定位置插入元素\"><a class=\"anchor\" href=\"#3在指定位置插入元素\">#</a> <strong>3. 在指定位置插入元素</strong></h4>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">InsertList</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> i, ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span> || i&gt;L.length + <span class=\"number\">1</span>) <span class=\"comment\">//判断位置是否有效</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length &gt;= MaxSize)<span class=\"comment\">//判断存储空间是否已满</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;当前存储空间已满！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = L.length; j &gt;= i; j--)<span class=\"comment\">//位置i及之后元素后移</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.data[j] = L.data[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.data[i - <span class=\"number\">1</span>] = e;</span><br><span class=\"line\">\tL.length++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//删除函数 删除位置i的元素 i之后的元素依次前移</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4删除指定位置元素\"><a class=\"anchor\" href=\"#4删除指定位置元素\">#</a> <strong>4. 删除指定位置元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span>  <span class=\"title function_\">ListDelete</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> i)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span> || i&gt;L.length)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= L.length - <span class=\"number\">1</span>; j++)<span class=\"comment\">//位置i之后元素依次前移覆盖</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.data[j - <span class=\"number\">1</span>] = L.data[j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.length--;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5查找元素\"><a class=\"anchor\" href=\"#5查找元素\">#</a> <strong>5. 查找元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">LocateElem</span><span class=\"params\">(SqList L, ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length; i++)<span class=\"comment\">//从低位置查找</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (L.data[i] == e)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"6顺序表倒置\"><a class=\"anchor\" href=\"#6顺序表倒置\">#</a> <strong>6. 顺序表倒置</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Reverse</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length - <span class=\"number\">1</span> - i; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> t = L.data[i];</span><br><span class=\"line\">\t\t\tL.data[i] = L.data[L.length - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">\t\t\tL.data[L.length - <span class=\"number\">1</span> - i] = t;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"7奇偶分开排序\"><a class=\"anchor\" href=\"#7奇偶分开排序\">#</a> <strong>7. 奇偶分开排序</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Reverse</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length - <span class=\"number\">1</span> - i; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> t = L.data[i];</span><br><span class=\"line\">\t\t\tL.data[i] = L.data[L.length - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">\t\t\tL.data[L.length - <span class=\"number\">1</span> - i] = t;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//奇偶分开并排序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">SplitSort</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> Even = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> Odd = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> j = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">bool</span> flag = <span class=\"literal\">false</span>; <span class=\"comment\">// 交换标志</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; j; i++, j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (L.data[i] % <span class=\"number\">2</span> != <span class=\"number\">0</span> &amp;&amp; i&lt;L.length - <span class=\"number\">1</span>)i++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (L.data[j] % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; j&gt;<span class=\"number\">0</span>)j--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (L.data[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; L.data[j] % <span class=\"number\">2</span> != <span class=\"number\">0</span> &amp;&amp; i&lt;j)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> temp = L.data[i];</span><br><span class=\"line\">\t\t\t\tL.data[i] = L.data[j];</span><br><span class=\"line\">\t\t\t\tL.data[j] = temp;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag) <span class=\"comment\">//没有交换</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i &gt; j) &#123; <span class=\"comment\">// 恰好奇偶分开</span></span><br><span class=\"line\">\t\t\t\t\tEven = j;</span><br><span class=\"line\">\t\t\t\t\tOdd = i;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tEven = L.length - <span class=\"number\">1</span>;<span class=\"comment\">//全奇数</span></span><br><span class=\"line\">\t\t\t\t\tOdd = <span class=\"number\">0</span>; <span class=\"comment\">//全偶数</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)<span class=\"comment\">//有交换</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (L.data[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tOdd = i;</span><br><span class=\"line\">\t\t\t\tEven = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(L.data, L.data + Even + <span class=\"number\">1</span>);</span><br><span class=\"line\">\tsort(L.data + Odd, L.data + L.length);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"8清空顺序表\"><a class=\"anchor\" href=\"#8清空顺序表\">#</a> <strong>8. 清空顺序表</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">ClearList</span><span class=\"params\">(SqList &amp;L)</span> &#123;</span><br><span class=\"line\">\tL.length = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三-完整可测试代码\"><a class=\"anchor\" href=\"#三-完整可测试代码\">#</a> <strong>三、完整可测试代码</strong></h3>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Project: sequence_list(数据结构-顺序表)</span></span><br><span class=\"line\"><span class=\"comment\">Date:    2018/09/12  20191012修改 添加Reverse  20200819修改 添加ClearList</span></span><br><span class=\"line\"><span class=\"comment\">Author:  Frank Yu</span></span><br><span class=\"line\"><span class=\"comment\">CreateList(SqList &amp;L,int n) 参数：顺序表L，顺序表长度n 功能：创建长度为的顺序表 时间复杂度：O(n)</span></span><br><span class=\"line\"><span class=\"comment\">InitList(SqList &amp;L) 参数：顺序表L 功能：初始化 时间复杂度:O(1)</span></span><br><span class=\"line\"><span class=\"comment\">InsertList(SqList &amp;L,int i,ElemType e) 参数:顺序表L,位置i,元素e 功能：位置i处插入元素e 时间复杂度:O(n)</span></span><br><span class=\"line\"><span class=\"comment\">ListDelete(SqList &amp;L,int i) 参数:顺序表L,位置i 功能：删除位置i处元素 时间复杂度:O(n)</span></span><br><span class=\"line\"><span class=\"comment\">LocateElem(SqList L,ElemType e) 参数:顺序表L,元素e 功能：返回第一个等于e的元素的位置 时间复杂度:O(n)</span></span><br><span class=\"line\"><span class=\"comment\">Reverse(SqList &amp;L) 参数：顺序表L 倒置函数 将原顺序表直接倒置</span></span><br><span class=\"line\"><span class=\"comment\">PrintList(SqList L) 参数:顺序表L 功能：遍历L，并输出</span></span><br><span class=\"line\"><span class=\"comment\">SplitSort(SqList &amp;L) 参数：顺序表L 功能：分开奇偶，并分开排序</span></span><br><span class=\"line\"><span class=\"comment\">ClearList(SqList &amp;L) 参数：顺序表L 功能：清空顺序表</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MaxSize 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ElemType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//顺序表数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data[MaxSize];<span class=\"comment\">//顺序表元素</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> length;            <span class=\"comment\">//顺序表当前长度</span></span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"comment\">//***************************基本操作函数*******************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化顺序表函数，构造一个空的顺序表 </span></span><br><span class=\"line\">Status <span class=\"title function_\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(L.data, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(L));<span class=\"comment\">//初始化数据为0</span></span><br><span class=\"line\">\tL.length = <span class=\"number\">0</span>;                <span class=\"comment\">//初始化长度为0</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建顺序表函数 初始化前n个数据</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">CreateList</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n&lt;<span class=\"number\">0</span> || n&gt;MaxSize)<span class=\"literal\">false</span>;<span class=\"comment\">//n非法</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;L.data[i]);</span><br><span class=\"line\">\t\tL.length++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//插入函数 位置i插入数据 i及之后元素后移  1=&lt;i&lt;=length+1 </span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">InsertList</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> i, ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span> || i&gt;L.length + <span class=\"number\">1</span>) <span class=\"comment\">//判断位置是否有效</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length &gt;= MaxSize)<span class=\"comment\">//判断存储空间是否已满</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;当前存储空间已满！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = L.length; j &gt;= i; j--)<span class=\"comment\">//位置i及之后元素后移</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.data[j] = L.data[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.data[i - <span class=\"number\">1</span>] = e;</span><br><span class=\"line\">\tL.length++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//删除函数 删除位置i的元素 i之后的元素依次前移</span></span><br><span class=\"line\"><span class=\"type\">bool</span>  <span class=\"title function_\">ListDelete</span><span class=\"params\">(SqList &amp;L, <span class=\"type\">int</span> i)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span> || i&gt;L.length)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= L.length - <span class=\"number\">1</span>; j++)<span class=\"comment\">//位置i之后元素依次前移覆盖</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.data[j - <span class=\"number\">1</span>] = L.data[j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.length--;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//查找函数 按位置从小到大查找第一个值等于e的元素 并返回位置</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">LocateElem</span><span class=\"params\">(SqList L, ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length; i++)<span class=\"comment\">//从低位置查找</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (L.data[i] == e)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//倒置函数 将原顺序表直接倒置</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Reverse</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length - <span class=\"number\">1</span> - i; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> t = L.data[i];</span><br><span class=\"line\">\t\t\tL.data[i] = L.data[L.length - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">\t\t\tL.data[L.length - <span class=\"number\">1</span> - i] = t;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//奇偶分开并排序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">SplitSort</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> Even = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> Odd = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> j = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">bool</span> flag = <span class=\"literal\">false</span>; <span class=\"comment\">// 交换标志</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L.length)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; j; i++, j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (L.data[i] % <span class=\"number\">2</span> != <span class=\"number\">0</span> &amp;&amp; i&lt;L.length - <span class=\"number\">1</span>)i++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (L.data[j] % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; j&gt;<span class=\"number\">0</span>)j--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (L.data[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; L.data[j] % <span class=\"number\">2</span> != <span class=\"number\">0</span> &amp;&amp; i&lt;j)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> temp = L.data[i];</span><br><span class=\"line\">\t\t\t\tL.data[i] = L.data[j];</span><br><span class=\"line\">\t\t\t\tL.data[j] = temp;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag) <span class=\"comment\">//没有交换</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i &gt; j) &#123; <span class=\"comment\">// 恰好奇偶分开</span></span><br><span class=\"line\">\t\t\t\t\tEven = j;</span><br><span class=\"line\">\t\t\t\t\tOdd = i;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tEven = L.length - <span class=\"number\">1</span>;<span class=\"comment\">//全奇数</span></span><br><span class=\"line\">\t\t\t\t\tOdd = <span class=\"number\">0</span>; <span class=\"comment\">//全偶数</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)<span class=\"comment\">//有交换</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (L.data[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tOdd = i;</span><br><span class=\"line\">\t\t\t\tEven = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(L.data, L.data + Even + <span class=\"number\">1</span>);</span><br><span class=\"line\">\tsort(L.data + Odd, L.data + L.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//清空顺序表</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">ClearList</span><span class=\"params\">(SqList &amp;L)</span> &#123;</span><br><span class=\"line\">\tL.length = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//********************************功能函数*****************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//输出功能函数 按位置从小到大输出顺序表所有元素</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PrintList</span><span class=\"params\">(SqList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;当前顺序表所有元素:&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i&lt;L.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, L.data[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建顺序表函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Create</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n; <span class=\"type\">bool</span> flag;</span><br><span class=\"line\">\tL.length = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要创建的顺序表长度(&gt;1):&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入%d个数（空格隔开）:&quot;</span>, n);</span><br><span class=\"line\">\tflag = CreateList(L, n);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;创建成功！\\n&quot;</span>);</span><br><span class=\"line\">\t\tPrintList(L);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入长度非法！\\n&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//插入功能函数 调用InsertList完成顺序表元素插入 调用PrintList函数显示插入成功后的结果</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Insert</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> place; ElemType e; <span class=\"type\">bool</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要插入的位置(从1开始)及元素:\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;place, &amp;e);</span><br><span class=\"line\">\tflag = InsertList(L, place, e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入成功！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\tPrintList(L);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//删除功能函数 调用ListDelete函数完成顺序表的删除 调用PrintList函数显示插入成功后的结果</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Delete</span><span class=\"params\">(SqList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> place; <span class=\"type\">bool</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要删除的位置(从1开始):\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;place);</span><br><span class=\"line\">\tflag = ListDelete(L, place);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除成功！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\tPrintList(L);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//查找功能函数 调用LocateElem查找元素</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Search</span><span class=\"params\">(SqList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tElemType e; <span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的值:\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;e);</span><br><span class=\"line\">\tflag = LocateElem(L, e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;该元素位置为:%d\\n&quot;</span>, flag);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;未找到该元素！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.创建                        2.插入*********\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.删除                        4.查找*********\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********5.倒置                        6.分奇偶排序***\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********7.输出                        8.清空*********\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********9.退出                              *********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSqList L; <span class=\"type\">int</span> choice;</span><br><span class=\"line\">\tInitList(L);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmenu();</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;choice);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"number\">9</span> == choice) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (choice)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:Create(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:Insert(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:Delete(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:Search(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:Reverse(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:SplitSort(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">7</span>:PrintList(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">8</span>:ClearList(L); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br />\n 测试代码原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhZHlfa2lsbGVyOS9hcnRpY2xlL2RldGFpbHMvODI2OTU3NzA=\">https://blog.csdn.net/lady_killer9/article/details/82695770</span></p>\n<h2 id=\"单链表\"><a class=\"anchor\" href=\"#单链表\">#</a> <strong>单链表</strong></h2>\n<h3 id=\"一-单链表的存储结构\"><a class=\"anchor\" href=\"#一-单链表的存储结构\">#</a> <strong>一、单链表的存储结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;LNode,*LinkList;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-单链表的操作\"><a class=\"anchor\" href=\"#二-单链表的操作\">#</a> <strong>二、单链表的操作</strong></h3>\n<h4 id=\"1初始化-2\"><a class=\"anchor\" href=\"#1初始化-2\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitList</span><span class=\"params\">(LinkList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> L = new LNode;<span class=\"comment\">//生成头结点 这样删除等操作就不必分第一个结点和其他了</span></span><br><span class=\"line\"> L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2获取链表长度\"><a class=\"anchor\" href=\"#2获取链表长度\">#</a> <strong>2. 获取链表长度</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">ListLength</span><span class=\"params\">(LinkList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkList p=L;<span class=\"type\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t sum++;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum<span class=\"number\">-1</span>;<span class=\"comment\">//去除头结点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3在指定位置插入元素-2\"><a class=\"anchor\" href=\"#3在指定位置插入元素-2\">#</a> <strong>3. 在指定位置插入元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">ListInsert</span><span class=\"params\">(LinkList &amp;L,<span class=\"type\">int</span> i,ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLNode* s;LinkList p=L;<span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(j&lt;i<span class=\"number\">-1</span>))<span class=\"comment\">//j指到i-1位置或者p已经到最后时跳出</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t ++j;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!p||j&gt;i<span class=\"number\">-1</span>)<span class=\"comment\">//i&lt;1或者i&gt;ListLength(L)+1时,插入位置无效 不调用ListLength,提高效率</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts=new LNode;</span><br><span class=\"line\">\ts-&gt;data=e;</span><br><span class=\"line\">\ts-&gt;next=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=s;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4删除指定位置元素-2\"><a class=\"anchor\" href=\"#4删除指定位置元素-2\">#</a> <strong>4. 删除指定位置元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">ListDelete</span><span class=\"params\">(LinkList &amp;L,<span class=\"type\">int</span> i)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> \tLNode* s;LinkList p=L;<span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tLinkList q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(j&lt;i<span class=\"number\">-1</span>))<span class=\"comment\">//j指到i-1位置</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t ++j;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p==nullptr||!(p-&gt;next) || j&gt;i - <span class=\"number\">1</span>)<span class=\"comment\">//i&lt;1或者i&gt;ListLength(L)时,删除位置无效</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tq=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=q-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(q);<span class=\"comment\">//释放空间</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5查找元素-2\"><a class=\"anchor\" href=\"#5查找元素-2\">#</a> <strong>5. 查找元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LNode *<span class=\"title function_\">LocateElem</span><span class=\"params\">(LinkList L,ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLNode *p=L;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(p-&gt;data!=e))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp=p-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三-完整可测试代码-2\"><a class=\"anchor\" href=\"#三-完整可测试代码-2\">#</a> <strong>三、完整可测试代码</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    Project: single linkeed list (数据结构 单链表)</span></span><br><span class=\"line\"><span class=\"comment\">    Date:    2018/09/14</span></span><br><span class=\"line\"><span class=\"comment\">    Author:  Frank Yu</span></span><br><span class=\"line\"><span class=\"comment\">\tInitList(LinkList &amp;L) 参数：单链表L 功能：初始化 时间复杂度 O(1)</span></span><br><span class=\"line\"><span class=\"comment\">\tListLength(LinkList L) 参数：单链表L 功能：获得单链表长度 时间复杂度O(n) </span></span><br><span class=\"line\"><span class=\"comment\">\tListInsert(LinkList &amp;L,int i,ElemType e) 参数：单链表L,位置i，元素e 功能：位置i后插 时间复杂度O(n)[加入了查找]</span></span><br><span class=\"line\"><span class=\"comment\">\t                                        若已知指针p指向的后插 O(1)</span></span><br><span class=\"line\"><span class=\"comment\">\tListDelete(LinkList &amp;L,int i) 参数：单链表L，位置i 功能：删除位置i元素 时间复杂度O(n)[加入了查找] </span></span><br><span class=\"line\"><span class=\"comment\">\t                              若已知p指针指向的删除 最好是O(1),因为可以与后继结点交换数据域，然后删除后继结点。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t\t\t  最坏是O(n),即从头查找p之前的结点,然后删除p所指结点</span></span><br><span class=\"line\"><span class=\"comment\">\tLocateElem(LinkList L,ElemType e) 参数：单链表L，元素e 功能：查找第一个等于e的元素，返回指针 时间复杂度O(n) </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ElemType int</span></span><br><span class=\"line\"><span class=\"comment\">//单链表结点数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;LNode,*LinkList;</span><br><span class=\"line\"><span class=\"comment\">//**************************基本操作函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitList</span><span class=\"params\">(LinkList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> L = new LNode;<span class=\"comment\">//生成头结点 这样删除等操作就不必分第一个结点和其他了</span></span><br><span class=\"line\"> L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取单链表长度 头结点无数据，不算</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">ListLength</span><span class=\"params\">(LinkList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkList p=L;<span class=\"type\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t sum++;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum<span class=\"number\">-1</span>;<span class=\"comment\">//去除头结点</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//插入函数--后插法 插入到第i(1&lt;=i&lt;=length+1)个位置 即i-1之后 不必区分i的位置</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">ListInsert</span><span class=\"params\">(LinkList &amp;L,<span class=\"type\">int</span> i,ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLNode* s;LinkList p=L;<span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(j&lt;i<span class=\"number\">-1</span>))<span class=\"comment\">//j指到i-1位置或者p已经到最后时跳出</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t ++j;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!p||j&gt;i<span class=\"number\">-1</span>)<span class=\"comment\">//i&lt;1或者i&gt;ListLength(L)+1时,插入位置无效 不调用ListLength,提高效率</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts=new LNode;</span><br><span class=\"line\">\ts-&gt;data=e;</span><br><span class=\"line\">\ts-&gt;next=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=s;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//删除函数 删除位置i的结点 即删除i-1之后的结点</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">ListDelete</span><span class=\"params\">(LinkList &amp;L,<span class=\"type\">int</span> i)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> \tLNode* s;LinkList p=L;<span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tLinkList q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(j&lt;i<span class=\"number\">-1</span>))<span class=\"comment\">//j指到i-1位置</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t p=p-&gt;next;</span><br><span class=\"line\">\t ++j;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p==nullptr||!(p-&gt;next) || j&gt;i - <span class=\"number\">1</span>)<span class=\"comment\">//i&lt;1或者i&gt;ListLength(L)时,删除位置无效</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除位置无效！！！\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tq=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=q-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(q);<span class=\"comment\">//释放空间</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//查找函数 按值查找 查找第一个等于e的结点 成功返回该结点指针，否则返回NULL</span></span><br><span class=\"line\">LNode *<span class=\"title function_\">LocateElem</span><span class=\"params\">(LinkList L,ElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLNode *p=L;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p&amp;&amp;(p-&gt;data!=e))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp=p-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//**************************功能实现函数**************************//</span></span><br><span class=\"line\"><span class=\"comment\">//遍历输出函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PrintList</span><span class=\"params\">(LinkList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkList p=L-&gt;next;<span class=\"comment\">//跳过头结点</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ListLength(L))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;当前单链表所有元素:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(p)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class=\"line\">\t\t\tp=p-&gt;next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;当前单链表已空！\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//插入功能函数 调用ListInsert后插</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Insert</span><span class=\"params\">(LinkList &amp;L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> place;ElemType e;<span class=\"type\">bool</span> flag;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要插入的位置(从1开始)及元素:\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;place,&amp;e);</span><br><span class=\"line\">  flag=ListInsert(L,place,e);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(flag) </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入成功！！！\\n&quot;</span>);</span><br><span class=\"line\">\tPrintList(L);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//删除功能函数 调用ListDelete删除</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Delete</span><span class=\"params\">(LinkList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> place;<span class=\"type\">bool</span> flag;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要删除的位置(从1开始):\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;place);</span><br><span class=\"line\">  flag=ListDelete(L,place);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(flag) </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除成功！！！\\n&quot;</span>);</span><br><span class=\"line\">\tPrintList(L);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//查找功能函数 调用LocateElem查找</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Search</span><span class=\"params\">(LinkList L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ElemType e;LNode *q;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的值:\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">  q=LocateElem(L,e);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(q) </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;找到该元素！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;未找到该元素！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.后插    2.删除*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.查找    4.输出*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********5.退出          *********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> LinkList L;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitList(L);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">5</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:Insert(L);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:Delete(L);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:Search(L);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">4</span>:PrintList(L);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;                       </span><br></pre></td></tr></table></figure><br />\n 测试代码原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhZHlfa2lsbGVyOS9hcnRpY2xlL2RldGFpbHMvODI3MDA3NDM=\">https://blog.csdn.net/lady_killer9/article/details/82700743</span></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/04/15/%E9%98%9F%E5%88%97/",
            "url": "https://dragonftop.github.io/2025/04/15/%E9%98%9F%E5%88%97/",
            "title": "数据结构-队列(循环队列)",
            "date_published": "2025-04-15T11:13:44.853Z",
            "content_html": "<h1 id=\"队列\"><a class=\"anchor\" href=\"#队列\">#</a> <strong>队列</strong></h1>\n<h2 id=\"循环队列\"><a class=\"anchor\" href=\"#循环队列\">#</a> <strong>循环队列</strong></h2>\n<h3 id=\"一-队列的存储结构\"><a class=\"anchor\" href=\"#一-队列的存储结构\">#</a> <strong>一、队列的存储结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tQElemType data[MaxQSize];<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> front,rear;          <span class=\"comment\">//队头队尾指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> length;<span class=\"comment\">//这里我自己觉得再加一个length数据更有利于循环队列的使用</span></span><br><span class=\"line\">    <span class=\"type\">int</span> state;</span><br><span class=\"line\">    <span class=\"comment\">// 由于当front和rear重合时不能直接判断队列满还是空</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里可以写一个state变量来作为队列的状态变量，例如：state=0,队列空，state=1，队列满</span></span><br><span class=\"line\">&#125;SqQueue;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-队列的操作\"><a class=\"anchor\" href=\"#二-队列的操作\">#</a> <strong>二、队列的操作</strong></h3>\n<hr />\n<h4 id=\"1初始化\"><a class=\"anchor\" href=\"#1初始化\">#</a> <strong>1. 初始化</strong></h4>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InitQueue</span><span class=\"params\">(SqQueue &amp;Q,<span class=\"type\">int</span> len)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQ.front=Q.rear=<span class=\"number\">0</span>;</span><br><span class=\"line\">    Q.length=len;</span><br><span class=\"line\">    Q.state=<span class=\"number\">0</span>;<span class=\"comment\">//初始化为默认为空。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2判断是否空\"><a class=\"anchor\" href=\"#2判断是否空\">#</a> <strong>2. 判断是否空</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">QueueEmpty</span><span class=\"params\">(SqQueue Q)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Q.front!=Q.rear&amp;&amp;Q.state==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3判断是否满\"><a class=\"anchor\" href=\"#3判断是否满\">#</a> <strong>3. 判断是否满</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">QueueFull</span><span class=\"params\">(SqQueue Q)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.front==Q.rear&amp;&amp;Q.state==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4入队列\"><a class=\"anchor\" href=\"#4入队列\">#</a> <strong>4. 入队列</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EnQueue</span><span class=\"params\">(SqQueue &amp;Q,QElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(QueueFull(Q))&#123;</span><br><span class=\"line\">        Q.data[Q.rear]=e;</span><br><span class=\"line\">\tQ.rear=(Q.rear+<span class=\"number\">1</span>)%Q.length;<span class=\"comment\">//指针加1 取模</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.front==Q.rear)&#123;</span><br><span class=\"line\">        Q.state=<span class=\"number\">1</span>;<span class=\"comment\">//判定队列是否刚好满</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5出队列\"><a class=\"anchor\" href=\"#5出队列\">#</a> <strong>5. 出队列</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DeQueue</span><span class=\"params\">(SqQueue &amp;Q,QElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!QueueEmpty(Q))&#123;</span><br><span class=\"line\">        e=Q.data[Q.front];</span><br><span class=\"line\">\t    Q.front=(Q.front+<span class=\"number\">1</span>)%Q.length;</span><br><span class=\"line\">    &#125;                               </span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Q.front==Q.rear)&#123;</span><br><span class=\"line\">        Q.state=<span class=\"number\">0</span>;<span class=\"comment\">//判定队列是否刚好为空</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"6取队首元素\"><a class=\"anchor\" href=\"#6取队首元素\">#</a> <strong>6. 取队首元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetHead</span><span class=\"params\">(SqQueue &amp;Q,QElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!QueueEmpty(Q))&#123;</span><br><span class=\"line\">        e=Q.data[Q.front];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"链队\"><a class=\"anchor\" href=\"#链队\">#</a> <strong>链队</strong></h2>\n<h3 id=\"链队的存储结构\"><a class=\"anchor\" href=\"#链队的存储结构\">#</a> <strong>链队的存储结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tQElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;QNode,*QueuePtr;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QNode</span> *<span class=\"title\">front</span>,*<span class=\"title\">rear</span>;</span></span><br><span class=\"line\">&#125;LinkQueue;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"链队的操作\"><a class=\"anchor\" href=\"#链队的操作\">#</a> <strong>链队的操作</strong></h3>\n<h4 id=\"1初始化-2\"><a class=\"anchor\" href=\"#1初始化-2\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InitQueue</span><span class=\"params\">(LinkQueue &amp;Q)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQ.front=Q.rear=new QNode;<span class=\"comment\">//生成新节点作为头结点，队头队尾指针均指向它</span></span><br><span class=\"line\">\tQ.front-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2入队列\"><a class=\"anchor\" href=\"#2入队列\">#</a> <strong>2. 入队列</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EnQueue</span><span class=\"params\">(LinkQueue &amp;Q,QElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQNode *p;</span><br><span class=\"line\">\tp = new QNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;    <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tQ.rear-&gt;next=p;<span class=\"comment\">//加入队尾</span></span><br><span class=\"line\">\tQ.rear=p;      <span class=\"comment\">//尾指针后移</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3出队列\"><a class=\"anchor\" href=\"#3出队列\">#</a> <strong>3. 出队列</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DeQueue</span><span class=\"params\">(LinkQueue &amp;Q,QElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQueuePtr p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Q.front==Q.rear)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//队空</span></span><br><span class=\"line\">\te=Q.front-&gt;next-&gt;data;           <span class=\"comment\">//e返回值 之前写的Q.front-&gt;data 炸了，头结点没数据的，一定要注意头结点</span></span><br><span class=\"line\">\tp=Q.front-&gt;next;                <span class=\"comment\">//保留，一会儿释放空间</span></span><br><span class=\"line\">\tQ.front-&gt;next=p-&gt;next;          <span class=\"comment\">//出队,注意Q.front-&gt;next 不是Q.front 还有头结点</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Q.rear==p)Q.rear=Q.front;    <span class=\"comment\">//最后一个元素出队，rear指向头结点</span></span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4取队首元素\"><a class=\"anchor\" href=\"#4取队首元素\">#</a> <strong>4. 取队首元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetHead</span><span class=\"params\">(LinkQueue &amp;Q,QElemType &amp;e)</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Q.front==Q.rear) <span class=\"keyword\">return</span> ;<span class=\"comment\">//队列为空</span></span><br><span class=\"line\">\te=Q.front-&gt;next-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//其实与链表有关的操作，只需要结合这个结构自身存储形式与链表的操作就好了</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/04/13/%E6%A0%88/",
            "url": "https://dragonftop.github.io/2025/04/13/%E6%A0%88/",
            "title": "数据结构---栈",
            "date_published": "2025-04-13T12:27:28.617Z",
            "content_html": "<h1 id=\"栈\"><a class=\"anchor\" href=\"#栈\">#</a> <strong>&lt;栈&gt;</strong></h1>\n<h2 id=\"-顺序栈-\"><a class=\"anchor\" href=\"#-顺序栈-\">#</a> <strong>- 顺序栈 -</strong></h2>\n<h3 id=\"一-顺序栈的数据结构\"><a class=\"anchor\" href=\"#一-顺序栈的数据结构\">#</a> <strong>一、顺序栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-顺序栈的操作\"><a class=\"anchor\" href=\"#二-顺序栈的操作\">#</a> <strong>二、顺序栈的操作</strong></h3>\n<hr />\n<h4 id=\"1-入栈\"><a class=\"anchor\" href=\"#1-入栈\">#</a> <strong>1. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-出栈\"><a class=\"anchor\" href=\"#2-出栈\">#</a> <strong>2. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-得到栈顶元素\"><a class=\"anchor\" href=\"#3-得到栈顶元素\">#</a> <strong>3. 得到栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//仅仅只是得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"完整可测试代码\"><a class=\"anchor\" href=\"#完整可测试代码\">#</a> <strong>完整可测试代码</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MaxSize 100</span></span><br><span class=\"line\"><span class=\"comment\">//栈数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType *base;<span class=\"comment\">//栈底指针 不变</span></span><br><span class=\"line\">\tSElemType *top;<span class=\"comment\">//栈顶指针 一直在栈顶元素上一个位置</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> stacksize;<span class=\"comment\">//栈可用的最大容量</span></span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************************基本操作函数************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ts.base=new SElemType[MaxSize];<span class=\"comment\">//动态分配最大容量</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!s.base)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.top=s.base;<span class=\"comment\">//栈顶指针与栈底相同 王道上top起初在base下面，感觉很别扭，top应该高于或等于base</span></span><br><span class=\"line\">\ts.stacksize=MaxSize;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;s,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top-s.base==s.stacksize) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈满</span></span><br><span class=\"line\">\t*(s.top++)=e;<span class=\"comment\">//先入栈，栈顶指针再上移 注意与王道上的不同，具体问题具体分析</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈 用e返回值</span></span><br><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;s,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=*--s.top;<span class=\"comment\">//先减减 指向栈顶元素，再给e</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//得到栈顶元素，不修改指针</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack s,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版59页有问题，应该用e去获得，函数返回bool类型去判断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s.top==s.base) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空\t\t\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> e=*--s.top;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//********************************功能实现函数**************************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈      2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已满！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(s,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(SqStack &amp;s)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(s,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> SqStack s;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(s);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(s);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"-链栈-\"><a class=\"anchor\" href=\"#-链栈-\">#</a> <strong>- 链栈 -</strong></h2>\n<h3 id=\"一-链栈的数据结构\"><a class=\"anchor\" href=\"#一-链栈的数据结构\">#</a> <strong>一、链栈的数据结构</strong></h3>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"二-链栈的操作\"><a class=\"anchor\" href=\"#二-链栈的操作\">#</a> <strong>二、链栈的操作</strong></h3>\n<hr />\n<h4 id=\"1初始化\"><a class=\"anchor\" href=\"#1初始化\">#</a> <strong>1. 初始化</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2入栈\"><a class=\"anchor\" href=\"#2入栈\">#</a> <strong>2. 入栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3出栈\"><a class=\"anchor\" href=\"#3出栈\">#</a> <strong>3. 出栈</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4取栈顶元素\"><a class=\"anchor\" href=\"#4取栈顶元素\">#</a> <strong>4. 取栈顶元素</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"完整可测试代码-2\"><a class=\"anchor\" href=\"#完整可测试代码-2\">#</a> <strong>完整可测试代码</strong></h4>\n<hr />\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Status int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SElemType int</span></span><br><span class=\"line\"><span class=\"comment\">//链栈结点数据结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tSElemType data;<span class=\"comment\">//数据域</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span><span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br><span class=\"line\"><span class=\"comment\">//**************************基本操作函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//初始化函数</span></span><br><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> S = <span class=\"literal\">NULL</span>;<span class=\"comment\">//生成空栈 以单链表表头为栈顶 注意，链栈没有像链表似的头结点</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈函数 将e压入栈</span></span><br><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tStackNode *p;</span><br><span class=\"line\">\tp=new StackNode;<span class=\"comment\">//生成新节点</span></span><br><span class=\"line\">\tp-&gt;data=e;      <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tp-&gt;next=S;      <span class=\"comment\">//压入栈顶</span></span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈函数  栈顶出栈用e返回 注意释放空间</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLinkStack p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tp=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶函数 用e返回</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span> <span class=\"comment\">//严蔚敏版（人民邮电出版社） 61页有误</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//栈顶为空</span></span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//**************************功能实现函数***************************//</span></span><br><span class=\"line\"><span class=\"comment\">//菜单</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">menu</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********1.入栈          2.出栈*********\\n&quot;</span>);</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;********3.取栈顶元素    4.退出*********\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入栈功能函数 调用Push函数 </span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PushToStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d个元素的值:&quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t flag=Push(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已入栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//出栈功能函数 调用Pop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PopFromStack</span><span class=\"params\">(LinkStack &amp;S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;SElemType e;<span class=\"type\">int</span> flag;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入出栈元素个数(&gt;=1)：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t flag=Pop(S,e);</span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d已出栈\\n&quot;</span>,e);</span><br><span class=\"line\">\t <span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//取栈顶功能函数 调用GetTop函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">GetTopOfStack</span><span class=\"params\">(LinkStack S)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSElemType e;<span class=\"type\">bool</span> flag; </span><br><span class=\"line\">\tflag=GetTop(S,e);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为:%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈已空！！！\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//主函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> LinkStack S;<span class=\"type\">int</span> choice;</span><br><span class=\"line\"> InitStack(S);</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  menu();</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入菜单序号：\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">1</span>:PushToStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">2</span>:PopFromStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">3</span>:GetTopOfStack(S);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入错误！！！\\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://dragonftop.github.io/2025/04/04/%E6%95%99%E6%9D%90%E9%85%8D%E5%A5%97%E7%BD%91%E7%AB%99/",
            "url": "https://dragonftop.github.io/2025/04/04/%E6%95%99%E6%9D%90%E9%85%8D%E5%A5%97%E7%BD%91%E7%AB%99/",
            "title": "数据结构与算法",
            "date_published": "2025-04-04T12:43:56.900Z",
            "content_html": "<h1 id=\"数据结构学习资源\"><a class=\"anchor\" href=\"#数据结构学习资源\">#</a> <em><strong>数据结构学习资源</strong></em></h1>\n<h3 id=\"数据结构\"><a class=\"anchor\" href=\"#数据结构\">#</a> 数据结构</h3>\n<h4 id=\"1数据结构c语言版全书知识梳理\"><a class=\"anchor\" href=\"#1数据结构c语言版全书知识梳理\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pYW1senkuYmxvZy5jc2RuLm5ldC9hcnRpY2xlL2RldGFpbHMvODY1NjA1NzA/ZnJvbXNoYXJlPWJsb2dkZXRhaWwmYW1wO3NoYXJldHlwZT1ibG9nZGV0YWlsJmFtcDtzaGFyZXJJZD04NjU2MDU3MCZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">1.《数据结构》C 语言版全书知识梳理</span></h4>\n<h4 id=\"2数据结构严蔚敏版与算法的实现含全部代码\"><a class=\"anchor\" href=\"#2数据结构严蔚敏版与算法的实现含全部代码\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhZHlfa2lsbGVyOS9hcnRpY2xlL2RldGFpbHMvODI2OTU4OTU/ZnJvbXNoYXJlPWJsb2dkZXRhaWwmYW1wO3NoYXJldHlwZT1ibG9nZGV0YWlsJmFtcDtzaGFyZXJJZD04MjY5NTg5NSZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">2. 数据结构（严蔚敏版）与算法的实现（含全部代码</span></h4>\n<h4 id=\"3数据结构c语言严蔚敏版第二版超详细笔记附带课后习题\"><a class=\"anchor\" href=\"#3数据结构c语言严蔚敏版第二版超详细笔记附带课后习题\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nob25neWFuZ18vYXJ0aWNsZS9kZXRhaWxzLzEwOTU0NDcxOT9mcm9tc2hhcmU9YmxvZ2RldGFpbCZhbXA7c2hhcmV0eXBlPWJsb2dkZXRhaWwmYW1wO3NoYXJlcklkPTEwOTU0NDcxOSZhbXA7c2hhcmVyZWZlcj1QQyZhbXA7c2hhcmVzb3VyY2U9MjQwMl84ODE4MDM4MiZhbXA7c2hhcmVmcm9tPWZyb21fbGluaw==\">3. 数据结构 C 语言严蔚敏版 (第二版) 超详细笔记附带课后习题</span></h4>\n",
            "tags": []
        }
    ]
}